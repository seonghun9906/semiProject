-- eezy academyProject
create database if not exists eezy_db;
create user if not exists eezy_user@localhost identified by '1234';
grant all privileges on eezy_db.* to eezy_user@localhost;
ALTER USER 'eezy_user'@'localhost' IDENTIFIED WITH mysql_native_password BY '1234';
FLUSH PRIVILEGES;


---------------------------------------------------------------------------------------------------------------

use eezy_db;

DROP VIEW IF EXISTS memeberlist;
DROP TABLE IF EXISTS membertbl;

-- table만들기
CREATE TABLE IF NOT EXISTS membertbl (
    m_id int NOT NULL AUTO_INCREMENT PRIMARY KEY,
    m_name varchar(100) NOT NULL,
    m_phoneNumber varchar(50) NOT NULL,
    m_email varchar(50) NOT NULL,
    m_password varchar(100) NOT NULL,
    m_address varchar(100) NOT NULL,
    m_age varchar(10) NOT NULL,
	sORt varchar(20) Not null
    
);
-- 리스트 만들기
CREATE OR REPLACE VIEW memberlist AS
SELECT * FROM membertbl
ORDER BY m_id DESC;
        
COMMIT; -- commit 을 안하면 안보임.

SELECT * FROM memberlist;
SELECT * FROM membertbl order by m_id DESC;

SET SQL_SAFE_UPDATES = 0;
DELETE FROM membertbl WHERE m_email = 'asd@asd';


delete from memberlist;
commit;


-- Class table

DROP VIEW IF EXISTS teacherName1list;
DROP TABLE IF EXISTS teacherName1;

CREATE TABLE IF NOT EXISTS teacherName1(
   c_id int NOT NULL AUTO_INCREMENT PRIMARY KEY,
	className varchar(50) NOT NULL,
    day varchar(50) not null,
    date varchar(50) NOT NULL,
    time varchar(50) Not null,
    m_id int,
    foreign key (m_id) references membertbl (m_id) on delete cascade 
);

INSERT INTO teacherName1
VALUES  (
	null,
    'classD',
    'TEST',
    'TEST',
    'TEST',
    null

);
CREATE OR REPLACE VIEW teacherName1list AS
SELECT * FROM teacherName1
ORDER BY c_id desc;

SELECT * FROM teacherName1 order by c_id desc;
        SELECT * FROM teacherName1list;
COMMIT; -- commit 을 안하면 안보임.




SElect COUNT(*) FROM teacherName1 where className = "classB";


delete from teacherName1list;
commit;


SELECT * FROM teacherName1 WHERE m_email='asd@asd';

SELECT * FROM membertbl WHERE className = 'classB';


-- ---------------------------------------------------------------------------------------------------------------------------------
DROP VIEW IF EXISTS blist;
DROP TABLE IF EXISTS Qboard;

CREATE OR REPLACE VIEW blist AS
SELECT * FROM Qboard ORDER BY b_code DESC;

CREATE TABLE IF NOT EXISTS Qboard (
   b_code int not null primary key auto_increment,
    m_id int,
    m_name varchar(100) NOT NULL,
    b_title varchar (20) not null,
    b_contents varchar (1000) not null,
    foreign key (m_id) references membertbl (m_id) on delete cascade
);

select * from Qboard;

INSERT INTO Qboard
VALUES  (
	null,
    null,
    'TEST',
    'TEST',
    'TEST'

);

-- ---------------------------------------------------------------
DROP VIEW IF EXISTS clist;
drop table if exists cmt;

CREATE OR REPLACE VIEW clist AS
SELECT * FROM cmt ORDER BY c_code DESC;
CREATE TABLE IF NOT EXISTS cmt (
   c_code int not null primary key auto_increment,
    c_contents varchar (500) not null,
    b_code int,
    m_id int,
    foreign key (m_id) references membertbl (m_id) on delete cascade,
   FOREIGN KEY (b_code) REFERENCES Qboard(b_code) on delete cascade
    );

SELECT * FROM cmt;

COMMIT;







SElect * from memberlist;

select * from clist;