/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.85
 * Generated at: 2024-03-06 04:01:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.Class;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;

public final class class1_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/icia.semiproject/semiProject/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/drawAcademy/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1709467646910L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("<link rel=\"stylesheet\" href=\"resources/css/class1.css\">\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.7.1.min.js\"\n");
      out.write("   integrity=\"sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=\"\n");
      out.write("   crossorigin=\"anonymous\"></script>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("   $(function() {\n");
      out.write("      let m = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${msg}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\n");
      out.write("      if (m != \"\") {\n");
      out.write("         alert(m);\n");
      out.write("      }\n");
      out.write("   });\n");
      out.write("</script>\n");
      out.write("</head>\n");
      out.write("<!--<h1> Home Page</h1>   -->\n");
      out.write("<body>\n");
      out.write("   <div class=\"bodyMain\">\n");
      out.write("    <div class=\"title\">\n");
      out.write("         TeacherName1\n");
      out.write("      </div>\n");
      out.write("    <img src=\"resources/images/demitasse2.PNG\" class=demitasse>\n");
      out.write("      <div class=\"headerMenu\">\n");
      out.write("         <button class=\"Home-btn\" onclick=\"location.href='./'\">\n");
      out.write("            <img src=\"resources/images/lg.png\" class=\"logo\">\n");
      out.write("         </button>\n");
      out.write("      </div>\n");
      out.write("      <div id=\"menu-container\">\n");
      out.write("         <img src=\"resources/images/menu.png\" id=\"menuButton\">\n");
      out.write("         <div id=\"rectangle\">\n");
      out.write("            <br> <br>\n");
      out.write("            <button class=\"Home-btn\" onclick=\"location.href='./'\">\n");
      out.write("               <p>HOME</p>\n");
      out.write("            </button>\n");
      out.write("            <br> <br> <br>\n");
      out.write("            <button class=\"ABOUT-btn\" onclick=\"location.href='./about'\">\n");
      out.write("               <p>ABOUT</p>\n");
      out.write("            </button>\n");
      out.write("            <br> <br> <br>\n");
      out.write("            <button class=\"INSTRUCTORS-btn\"\n");
      out.write("               onclick=\"location.href='./instructors'\">\n");
      out.write("               <p>INSTRUCTORS</p>\n");
      out.write("            </button>\n");
      out.write("            <br> <br> <br>\n");
      out.write("            <button class=\"CLASS-btn\" onclick=\"location.href='./classpage'\">\n");
      out.write("               <p>CLASS</p>\n");
      out.write("            </button>\n");
      out.write("            <br> <br> <br>\n");
      out.write("              <button class=\"CONTACT-btn\" onclick=\"location.href='./qboard'\">\n");
      out.write("               <p>FAQ</p>\n");
      out.write("            </button>\n");
      out.write("            <br> <br> <br> <br> <br> <br> <br>\n");
      out.write("            <br> <br> <br> <br> <br> <br> <br>\n");
      out.write("            <div class=\"smallWord\">\n");
      out.write("               <button id=\"loginBtn\" class=\"LOGIN-btn\" onclick=\"location.href='./login'\">\n");
      out.write("                  <small>LOGIN</small>\n");
      out.write("               </button>\n");
      out.write("               <form id=\"logoutForm\" action=\"logout\" method=\"get\">\n");
      out.write("                <button class=\"LOGIN-btn\" onclick=\"location.href='./'\">\n");
      out.write("                  <small>LOGOUT</small>\n");
      out.write("               </button>\n");
      out.write("               </form>\n");
      out.write("               <button id=\"signupBtn\" class=\"SIGNUP-btn\" onclick=\"location.href='./signUp'\">\n");
      out.write("                  <small>SIGN UP</small>\n");
      out.write("               </button>\n");
      out.write("               <button id=\"myPage\" class=\"MYPAGE-btn\" onclick=\"location.href='./mypage'\">\n");
      out.write("            	<small>MY PAGE</small>\n");
      out.write("         		</button>\n");
      out.write("            </div>\n");
      out.write("            <br> <br> <br>\n");
      out.write("            <div id=\"icon-container2\">\n");
      out.write("               <a href=\"https://www.facebook.com\"> <img\n");
      out.write("                  src=\"resources/images/facebookIcon.png\" class=\"facebook\">\n");
      out.write("               </a> <a href=\"https://www.youtube.com\"> <img\n");
      out.write("                  src=\"resources/images/youtubeIcon.png\" class=\"youtube\">\n");
      out.write("               </a> <a href=\"https://www.instagram.com\"> <img\n");
      out.write("                  src=\"resources/images/instagramIcon.png\" class=\"instagram\">\n");
      out.write("               </a>\n");
      out.write("            </div>\n");
      out.write("         </div>\n");
      out.write("      </div>\n");
      out.write("      <div id=\"icon-container\">\n");
      out.write("         <a href=\"https://www.facebook.com\"> <img\n");
      out.write("            src=\"resources/images/facebookIcon.png\" class=\"facebook\">\n");
      out.write("         </a> <a href=\"https://www.youtube.com\"> <img\n");
      out.write("            src=\"resources/images/youtubeIcon.png\" class=\"youtube\">\n");
      out.write("         </a> <a href=\"https://www.instagram.com\"> <img\n");
      out.write("            src=\"resources/images/instagramIcon.png\" class=\"instagram\">\n");
      out.write("         </a>\n");
      out.write("      </div>\n");
      out.write("      \n");
      out.write("      <div class=\"class1\">\n");
      out.write("	<img src=\"resources/images/강사 프로필 사진.PNG\" alt=\"강사1\" class=\"teacher1\">\n");
      out.write("<p>		\n");
      out.write("	<div class=\"classinfo\">\n");
      out.write("    <span>| DATE: 3/19 |</span>\n");
      out.write("    <span>DAY: MON |</span>\n");
      out.write("    <span>TIME: 19:30-20:30 |</span>\n");
      out.write("    <span>Class A </span>\n");
      out.write("    <span>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${classLimitA}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/20 |</span>\n");
      out.write("</p>\n");
      out.write("<p>\n");
      out.write("    <span>| DATE: 3/20 |</span>\n");
      out.write("    <span>DAY: TUE |</span>\n");
      out.write("    <span>TIME: 20:30-21:30 |</span>\n");
      out.write("    <span>Class B </span>\n");
      out.write("    <span>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${classLimitB}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/20 |</span>\n");
      out.write("</p>\n");
      out.write("<p>\n");
      out.write("    <span>| DATE: 3/21 |</span>\n");
      out.write("    <span>DAY: WED |</span>\n");
      out.write("    <span>TIME: 15:30-16:30 |</span>\n");
      out.write("    <span>Class C</span>\n");
      out.write("    <span>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${classLimitC}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/20 |</span>\n");
      out.write("</p>\n");
      out.write("<p>\n");
      out.write("    <span>| DATE: 3/22 |</span>\n");
      out.write("    <span>DAY: THU |</span>\n");
      out.write("    <span>TIME: 16:30-17:30 |</span>\n");
      out.write("    <span>Class D</span>\n");
      out.write("    <span>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${classLimitD}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/20 |</span>\n");
      out.write("</p>\n");
      out.write("<p>\n");
      out.write("    <span>| DATE: 3/23 |</span>\n");
      out.write("    <span>DAY: FRI |</span>\n");
      out.write("    <span>TIME: 18:30-19:30 |</span>\n");
      out.write("    <span>Class E</span>\n");
      out.write("    <span>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${classLimitE}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/20 |</span>\n");
      out.write("</p>\n");
      out.write("</div>\n");
      out.write("	<div class=\"selectOption\">\n");
      out.write("<form action=\"class1proc\" method=\"post\" id=\"class1proc\" onsubmit=\"return checkClass(event);\">\n");
      out.write("    <label for=\"selectOption\">수강신청 :</label>\n");
      out.write("    <select id=\"selectOption\" class=\"selected\" name=\"className\">\n");
      out.write("    	<option value=\"none\" id=\"none\"  selected>선택</option>\n");
      out.write("        <option value=\"classA\" id=\"classA\">Class A</option>\n");
      out.write("        <option value=\"classB\" id=\"classB\">Class B</option>\n");
      out.write("        <option value=\"classC\" id=\"classC\">Class C</option>\n");
      out.write("        <option value=\"classD\" id=\"classD\">Class D</option>\n");
      out.write("        <option value=\"classE\" id=\"classE\">Class E</option>\n");
      out.write("    </select>\n");
      out.write("    <p>\n");
      out.write("    	\n");
      out.write("        <span>Date: <input type=\"text\" id=\"dateField\" name=\"date\" class=\"className\" readonly></span>\n");
      out.write("        <br><span>Day: <input type=\"text\" id=\"dayField\" name=\"day\"  class=\"className\"readonly></span>\n");
      out.write("        <br><span>Time: <input type=\"text\" id=\"timeField\" name=\"time\" class=\"className\" readonly></span>\n");
      out.write("         <input type=\"hidden\" name=\"m_id\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${m_id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n");
      out.write("    </p>\n");
      out.write("   		<h3>\n");
      out.write("				내 수강신청 목록\n");
      out.write("		</h3>\n");
      out.write("    	<ul>\n");
      out.write("         ");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("         </ul>\n");
      out.write("         \n");
      out.write("         \n");
      out.write("    	<button type=\"submit\">\n");
      out.write("    	<span></span>\n");
      out.write("		<span></span>\n");
      out.write("		<span></span>\n");
      out.write("		<span></span>\n");
      out.write("    	수강신청\n");
      out.write("    	</button>\n");
      out.write("   \n");
      out.write("		</form>\n");
      out.write("			</div>\n");
      out.write(" 		</div>\n");
      out.write("   </div>\n");
      out.write("   \n");
      out.write("   \n");
      out.write("   \n");
      out.write("   \n");
      out.write("   \n");
      out.write("</body>\n");
      out.write("<script>\n");
      out.write("$(document).ready(function () {\n");
      out.write("	\n");
      out.write("	//아무것도 선택안했을시 비활성화\n");
      out.write("	 $(\"#dateField, #dayField, #timeField\").prop(\"disabled\", true);\n");
      out.write("	 \n");
      out.write("	 \n");
      out.write("	$(\"#selectOption\").on('change', function () {\n");
      out.write("        var selectedClass = $(this).val();\n");
      out.write("        console.log(\"selectedClass:\", selectedClass);\n");
      out.write("        \n");
      out.write("        var classCheckElement = document.querySelectorAll(\"#classCheck\");\n");
      out.write("        //console.log(classCheckElement);\n");
      out.write("        \n");
      out.write("        for(var classCheckItem of classCheckElement){\n");
      out.write("        	//console.log(classCheckItem);\n");
      out.write("        	var classCheck = classCheckItem ? classCheckItem.value : null;\n");
      out.write("        	console.log(\"중복된 클래스 = \" + classCheck);\n");
      out.write("        	\n");
      out.write("        	if (classCheck == selectedClass) {\n");
      out.write("                alert(\"이미 수강신청한 CLASS입니다.\");\n");
      out.write("                event.preventDefault();\n");
      out.write("                $(\"#dateField, #dayField, #timeField\").prop(\"disabled\", true);\n");
      out.write("                \n");
      out.write("                // 이미 중복되었다고 알리고 필드를 빈칸으로 비활성화\n");
      out.write("                $(\"#dateField\").val(\"\");\n");
      out.write("                $(\"#dayField\").val(\"\");\n");
      out.write("                $(\"#timeField\").val(\"\");\n");
      out.write("                return;\n");
      out.write("                break;\n");
      out.write("                \n");
      out.write("                \n");
      out.write("            }else if (selectedClass == \"none\"){\n");
      out.write("            	 $(\"#dateField, #dayField, #timeField\").prop(\"disabled\", true);\n");
      out.write("                 \n");
      out.write("                 // 이미 중복되었다고 알리고 필드를 빈칸으로 비활성화\n");
      out.write("                 $(\"#dateField\").val(\"\");\n");
      out.write("                 $(\"#dayField\").val(\"\");\n");
      out.write("                 $(\"#timeField\").val(\"\");\n");
      out.write("                 return;\n");
      out.write("            	 break;\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("        /* var classCheck = classCheckElement ? classCheckElement.value : null\n");
      out.write("       	console.log(\"consolelog = \" + classCheck); \n");
      out.write("        		\n");
      out.write("        if (classCheck == selectedClass) {\n");
      out.write("            alert(\"이미 수강신청한 CLASS입니다.\");\n");
      out.write("            \n");
      out.write("        }*/\n");
      out.write("        \n");
      out.write("        // 선택된 클래스에 따라 필드 값 설정\n");
      out.write("        if (selectedClass === \"classA\") {\n");
      out.write("            $(\"#dateField\").val(\"3/19\");\n");
      out.write("            $(\"#dayField\").val(\"MON\");\n");
      out.write("            $(\"#timeField\").val(\"19:30-20:30\");\n");
      out.write("        } else if (selectedClass === \"classB\") {\n");
      out.write("            $(\"#dateField\").val(\"3/20\");\n");
      out.write("            $(\"#dayField\").val(\"TUE\");\n");
      out.write("            $(\"#timeField\").val(\"20:30-21:30\");\n");
      out.write("        } else if (selectedClass === \"classC\") {\n");
      out.write("            $(\"#dateField\").val(\"3/21\");\n");
      out.write("            $(\"#dayField\").val(\"WED\");\n");
      out.write("            $(\"#timeField\").val(\"15:30-16:30\");\n");
      out.write("        }	else if (selectedClass === \"classD\") {\n");
      out.write("            $(\"#dateField\").val(\"3/22\");\n");
      out.write("            $(\"#dayField\").val(\"THU\");\n");
      out.write("            $(\"#timeField\").val(\"16:30-17:30\");\n");
      out.write("        }	else if (selectedClass === \"classE\") {\n");
      out.write("            $(\"#dateField\").val(\"3/23\");\n");
      out.write("            $(\"#dayField\").val(\"FRI\");\n");
      out.write("            $(\"#timeField\").val(\"18:30-19:30\");\n");
      out.write("        }\n");
      out.write("            // 이미 수강 중이라면 필드를 활성화하지 않음\n");
      out.write("        \n");
      out.write("   		  // 필드를 활성화\n");
      out.write("      	  $(\"#dateField, #dayField, #timeField\").prop(\"disabled\", false);\n");
      out.write("            \n");
      out.write("        // 이미 수강 중인 경우 폼 제출을 막음\n");
      out.write("        if (isFieldDisabled) {\n");
      out.write("            alert(\"이미 수강신청한 CLASS입니다.\");\n");
      out.write("            event.preventDefault();\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        \n");
      out.write("        \n");
      out.write("    });\n");
      out.write("});\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("  function checkClass(event) {\n");
      out.write("    var selectedClass = $(\"#selectOption\").val();\n");
      out.write("    var classLimitAValue = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${classLimitA}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\n");
      out.write("    var classLimitBValue = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${classLimitB}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\n");
      out.write("    var classLimitCValue = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${classLimitC}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\n");
      out.write("    var classLimitDValue = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${classLimitD}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\n");
      out.write("    var classLimitEValue = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${classLimitE}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\n");
      out.write("\n");
      out.write("    console.log(\"선택한 클래스 \" + selectedClass);\n");
      out.write("    console.log(\"클래스 정원 \" + classLimitEValue);\n");
      out.write("\n");
      out.write("    // 정원 초과 체크\n");
      out.write("    if (selectedClass === \"classA\" && classLimitAValue >= 20) {\n");
      out.write("      alert(\"classA 정원이 초과되었습니다. 수강신청이 불가합니다.\");\n");
      out.write("     \n");
      out.write("      return false;\n");
      out.write("    } else if (selectedClass === \"classB\" && classLimitBValue >= 20) {\n");
      out.write("      alert(\"classB 정원이 초과되었습니다. 수강신청이 불가합니다.\");\n");
      out.write("     \n");
      out.write("      return false;\n");
      out.write("    } else if (selectedClass === \"classC\" && classLimitCValue >= 20) {\n");
      out.write("      alert(\"classC 정원이 초과되었습니다. 수강신청이 불가합니다.\");\n");
      out.write("     \n");
      out.write("      return false;\n");
      out.write("    } else if (selectedClass === \"classD\" && classLimitDValue >= 20) {\n");
      out.write("      alert(\"classD 정원이 초과되었습니다. 수강신청이 불가합니다.\");\n");
      out.write("      \n");
      out.write("      return false;\n");
      out.write("    } else if (selectedClass === \"classE\" && classLimitEValue >= 20) {\n");
      out.write("      alert(\"classE 정원이 초과되었습니다. 수강신청이 불가합니다.\");\n");
      out.write("      \n");
      out.write("      return false;\n");
      out.write("    }\n");
      out.write("	\n");
      out.write("    return true;\n");
      out.write("  }\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("   var rectangle = document.getElementById$('rectangle');\n");
      out.write("   var menuButton = document.getElementById('menuButton');\n");
      out.write("   var iconContainer = document.getElementById('icon-container');\n");
      out.write("   var isRectangleVisible = false; // rectangle의 초기 상태를 정의 - 첫 메뉴 클릭 때 실행되지 않는 현상 해결\n");
      out.write("\n");
      out.write("   menuButton.addEventListener('click', function() {\n");
      out.write("      if (!isRectangleVisible) {\n");
      out.write("         rectangle.style.display = 'block';\n");
      out.write("         iconContainer.style.display = 'none'; //메뉴 창이 나오면서 iconcontainer 사라지기\n");
      out.write("         isRectangleVisible = true; // rectangle이 보이는 상태로 설정\n");
      out.write("      } else {\n");
      out.write("         rectangle.style.display = 'none';\n");
      out.write("         iconContainer.style.display = 'flex';\n");
      out.write("         isRectangleVisible = false; // rectangle이 숨겨진 상태로 설정\n");
      out.write("      }\n");
      out.write("   });\n");
      out.write("</script>\n");
      out.write("<script>\n");
      out.write(" \n");
      out.write("document.addEventListener(\"DOMContentLoaded\", function() {\n");
      out.write("  var loginBtn = document.getElementById(\"loginBtn\");\n");
      out.write("  var logoutForm = document.getElementById(\"logoutForm\");\n");
      out.write("  var signupBtn = document.getElementById(\"signupBtn\");\n");
      out.write("  var myPageBtn = document.getElementById(\"myPage\");\n");
      out.write("\n");
      out.write("  var loggedInMember = '");
      out.print( session.getAttribute("login") );
      out.write("';\n");
      out.write("  console.log(\"세션에 저장된 값: \" + loggedInMember);\n");
      out.write("  // 여기서 로그인 여부를 확인하고 그에 따라 버튼을 표시하거나 숨깁니다.\n");
      out.write("  var isLoggedIn = loggedInMember !== 'null' && loggedInMember !== '';\n");
      out.write("\n");
      out.write("  if (isLoggedIn) {\n");
      out.write("    loginBtn.style.display = \"none\";\n");
      out.write("    logoutForm.style.display = \"block\";\n");
      out.write("    signupBtn.style.display = \"none\";\n");
      out.write("    myPageBtn.style.display =\"block\";\n");
      out.write("  } else {\n");
      out.write("    loginBtn.style.display = \"block\";\n");
      out.write("    logoutForm.style.display = \"none\";\n");
      out.write("    signupBtn.style.display= \"block\";\n");
      out.write("    myPageBtn.style.display=\"none\";\n");
      out.write("  }\n");
      out.write("});\n");
      out.write("</script>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/Class/class1.jsp(161,9) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("cl");
      // /WEB-INF/views/Class/class1.jsp(161,9) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/Class/class1.jsp(161,9) '${cList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${cList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/Class/class1.jsp(161,9) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVarStatus("loop");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\n");
            out.write(" 			<input type=\"hidden\" id=\"classCheck\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cl.className}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"> \n");
            out.write(" 			<li>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cl.className}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</li> \n");
            out.write("         ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}
